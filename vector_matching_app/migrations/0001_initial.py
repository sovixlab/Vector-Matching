# Generated by Django 4.2.7 on 2025-09-10 13:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('house_number', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('education_level', models.CharField(blank=True, max_length=100)),
                ('job_titles', models.JSONField(blank=True, default=list)),
                ('years_experience', models.IntegerField(blank=True, null=True)),
                ('cv_pdf', models.FileField(blank=True, null=True, upload_to='cvs/')),
                ('cv_text', models.TextField(blank=True)),
                ('extract_json', models.JSONField(blank=True, default=dict)),
                ('profile_text', models.TextField(blank=True)),
                ('embedding', models.JSONField(blank=True, help_text='Vector embedding (1536 dimensions)', null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('embed_status', models.CharField(choices=[('queued', 'In wachtrij'), ('processing', 'Wordt verwerkt'), ('completed', 'Voltooid'), ('failed', 'Mislukt')], default='queued', max_length=20)),
                ('processing_step', models.CharField(blank=True, max_length=50)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('embedding', models.JSONField(blank=True, help_text='Vector embedding (1536 dimensions)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('prompt_type', models.CharField(choices=[('cv_parsing', 'CV Parsing'), ('profile_summary', 'Profiel Samenvatting'), ('custom', 'Aangepast')], max_length=20)),
                ('content', models.TextField()),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='vector_matching_app.prompt')),
            ],
            options={
                'ordering': ['-version', '-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Vacature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('externe_id', models.CharField(help_text='ID uit externe feed', max_length=100, unique=True)),
                ('titel', models.CharField(max_length=255)),
                ('organisatie', models.CharField(max_length=255)),
                ('plaats', models.CharField(max_length=100)),
                ('postcode', models.CharField(max_length=10)),
                ('url', models.URLField()),
                ('beschrijving', models.TextField(blank=True, help_text='Vacature beschrijving')),
                ('samenvatting', models.TextField(blank=True, help_text='AI gegenereerde samenvatting')),
                ('embedding', models.JSONField(blank=True, help_text='Vector embedding voor matching', null=True)),
                ('actief', models.BooleanField(default=True, help_text='Of de vacature nog actief is')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Aangemaakt'), ('updated', 'Bijgewerkt'), ('activated', 'Geactiveerd'), ('deactivated', 'Gedeactiveerd'), ('deleted', 'Verwijderd')], max_length=20)),
                ('old_content', models.TextField(blank=True, null=True)),
                ('new_content', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('prompt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='vector_matching_app.prompt')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Match score tussen 0 en 100 (1 decimaal)')),
                ('afstand_km', models.FloatField(blank=True, help_text='Afstand in kilometers', null=True)),
                ('afstand_berekend', models.BooleanField(default=False, help_text='Of de afstand is berekend')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('kandidaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='vector_matching_app.candidate')),
                ('vacature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='vector_matching_app.vacature')),
            ],
            options={
                'ordering': ['-score', '-timestamp'],
                'indexes': [models.Index(fields=['-score'], name='vector_matc_score_52d93b_idx'), models.Index(fields=['kandidaat', 'vacature'], name='vector_matc_kandida_7f9f54_idx')],
                'unique_together': {('kandidaat', 'vacature')},
            },
        ),
    ]
